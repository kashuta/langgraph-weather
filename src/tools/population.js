import { tool } from "@langchain/core/tools";
import { z } from "zod";
import { extractCityFromQuery } from '../utils.js';

export const populationTool = tool(
  async ({ query }) => {
    console.log(`[Tool Call] üìû –í—ã–∑–≤–∞–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'get_population' —Å –∑–∞–ø—Ä–æ—Å–æ–º: "${query}"`);
    const city = extractCityFromQuery(query);
    const mockPopulation = {
      '–º–æ—Å–∫–≤–∞': '12.6 –º–ª–Ω',
      '–ø–∞—Ä–∏–∂': '2.1 –º–ª–Ω',
      '–ª–æ–Ω–¥–æ–Ω': '8.9 –º–ª–Ω',
      '—Ç–æ–∫–∏–æ': '14.0 –º–ª–Ω',
    };
    const result = `–ù–∞—Å–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ ${city}: ~${mockPopulation[city.toLowerCase()] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
    console.log(`  [Population Tool] üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`);
    return result;
  },
  {
    name: "get_population",
    description: "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.",
    schema: z.object({
      query: z.string().describe("–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."),
    }),
  }
); 