/**
 * @fileoverview –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Ä–æ–∂–Ω–æ–º —Ç—Ä–∞—Ñ–∏–∫–µ –≤ –≥–æ—Ä–æ–¥–µ.
 */

import { tool } from "@langchain/core/tools";
import { z } from "zod";
import { extractCityFromQuery } from '../utils.js';

export const trafficTool = tool(
  async ({ query }) => {
    console.log(`[Tool Call] üìû –í—ã–∑–≤–∞–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'get_traffic_info' —Å –∑–∞–ø—Ä–æ—Å–æ–º: "${query}"`);
    const city = extractCityFromQuery(query);
    const mockTraffic = {
      '–º–æ—Å–∫–≤–∞': '8 –±–∞–ª–ª–æ–≤, –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ —Ü–µ–Ω—Ç—Ä–µ',
      '–ø–∞—Ä–∏–∂': '6 –±–∞–ª–ª–æ–≤, –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–æ –Ω–∞ –∫–æ–ª—å—Ü–µ–≤–æ–π',
      '–ª–æ–Ω–¥–æ–Ω': '7 –±–∞–ª–ª–æ–≤, –ø–ª–æ—Ç–Ω—ã–π —Ç—Ä–∞—Ñ—Ñ–∏–∫ –≤ –°–∏—Ç–∏',
      '—Ç–æ–∫–∏–æ': '5 –±–∞–ª–ª–æ–≤, –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –Ω–æ—Ä–º–µ',
    };
    const result = `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–±–∫–∞—Ö –≤ –≥–æ—Ä–æ–¥–µ ${city}: ${mockTraffic[city.toLowerCase()] || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`;
    console.log(`  [Traffic Tool] üöó –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`);
    return result;
  },
  {
    name: "get_traffic_info",
    description: "–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Ä–æ–∂–Ω–æ–º —Ç—Ä–∞—Ñ–∏–∫–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.",
    schema: z.object({
      query: z.string().describe("–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."),
    }),
  }
); 