import 'dotenv/config';
import { tool } from "@langchain/core/tools";
import { z } from "zod";
import fetch from "node-fetch";
import { extractCityFromQuery } from '../utils.js';

const getWeatherData = async (city) => {
  console.log(`  [Weather Tool] üå§Ô∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);
  const apiKey = process.env.OPENWEATHER_API_KEY;

  if (!apiKey || apiKey === 'YOUR_API_KEY_HERE') {
    console.log("  [Weather Tool] ‚ö†Ô∏è  API –∫–ª—é—á OpenWeather –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.");
    return `–ú–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –í –≥–æ—Ä–æ–¥–µ ${city} —Å–µ–π—á–∞—Å 22¬∞C, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å.`;
  }
  
  try {
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${apiKey}&units=metric&lang=ru`;
    const response = await fetch(url);
    const data = await response.json();
    
    if (!response.ok) {
      return `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}.`;
    }
    
    return `–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${data.name}: ${Math.round(data.main.temp)}¬∞C, ${data.weather[0].description}.`;
    
  } catch (error) {
    return `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ ${city}.`;
  }
};

export const weatherTool = tool(
  async ({ query }) => {
    console.log(`[Tool Call] üìû –í—ã–∑–≤–∞–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'get_weather' —Å –∑–∞–ø—Ä–æ—Å–æ–º: "${query}"`);
    const city = extractCityFromQuery(query);
    return await getWeatherData(city);
  },
  {
    name: "get_weather",
    description: "–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.",
    schema: z.object({
      query: z.string().describe("–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."),
    }),
  }
); 