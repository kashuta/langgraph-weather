/**
 * @fileoverview –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞-–≥–µ–æ–≥—Ä–∞—Ñ–∞ —Å –ª–æ–≥–∏–∫–æ–π Human-in-the-Loop (HITL).
 */

import { tool } from "@langchain/core/tools";
import { createReactAgent } from "@langchain/langgraph/prebuilt";
import { SystemMessage } from "@langchain/core/messages";
import {
  coordinatesToolWithRetry,
  populationToolWithRetry,
  trafficToolWithRetry,
} from "../tools/index.js"; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –±—É–¥–µ—Ç index-—Ñ–∞–π–ª

/**
 * –ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å—á–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –æ—Ç–≤–µ—Ç–µ.
 * @param {string} _result - –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–æ–∫–µ).
 * @returns {number} –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1.
 */
const calculateConfidence = (_result) => {
    const confidence = Math.random();
    console.log(`  [HITL Confidence Check] üé≤ –†–∞—Å—á–µ—Ç–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${confidence.toFixed(2)}`);
    return confidence;
};


/**
 * –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç populationTool, –¥–æ–±–∞–≤–ª—è—è –ø—Ä–æ–≤–µ—Ä–∫—É —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏.
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-—Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ ReAct –∞–≥–µ–Ω—Ç–∞.
 */
const populationToolWithCheck = tool(async (input) => {
  console.log(`[Tool Call] üìû –í—ã–∑–≤–∞–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'populationToolWithCheck' —Å –∑–∞–ø—Ä–æ—Å–æ–º: "${input.query}"`);
  const result = await populationToolWithRetry.func(input);
  const confidence = calculateConfidence(result);

  // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON
  return JSON.stringify({
    tool: "get_population",
    content: result,
    confidence: confidence,
  });
}, {
    name: "get_population",
    description: populationToolWithRetry.description,
    schema: populationToolWithRetry.schema,
});

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç –∞–≥–µ–Ω—Ç–∞-–≥–µ–æ–≥—Ä–∞—Ñ–∞ —Å HITL-–ª–æ–≥–∏–∫–æ–π.
 * @param {import("@langchain/openai").ChatOpenAI} llm - –≠–∫–∑–µ–º–ø–ª—è—Ä —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏.
 * @returns {import("@langchain/langgraph/prebuilt").ReactAgentExecutor} –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç.
 */
export const createGeographyAgentWithHITL = (llm) => {
  // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞ –Ω–∞—à—É –æ–±–µ—Ä—Ç–∫—É
  const tools = [
    coordinatesToolWithRetry,
    populationToolWithCheck, // <-- –ù–∞—à –Ω–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
    trafficToolWithRetry,
  ];

  console.log("  [Agent Factory] üõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ GeographyAgent —Å HITL-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º: populationToolWithCheck");

  return createReactAgent({
    llm,
    tools,
    stateModifier: new SystemMessage(
      "–¢—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏. –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—é –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è. " +
      "–ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –Ω–∞—Å–µ–ª–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞—Ñ–∏–∫–µ."
    ),
  });
};
