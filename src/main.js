/**
 * @fileoverview –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å, –∞–≥–µ–Ω—Ç–æ–≤, —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã.
 */

import 'dotenv/config';
import { ChatOpenAI } from "@langchain/openai";
import { HumanMessage } from "@langchain/core/messages";
import { createWeatherAgent } from './agents/weather.js';
import { createGeographyAgent } from './agents/geography.js';
import { buildGraph } from './graph/supervisor.js';

import { startConversation } from './console.js';

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 */
async function main() {
  console.log("üîµ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM...");
  const llm = new ChatOpenAI({
    model: "gpt-4o-mini",
    temperature: 0,
    apiKey: process.env.OPENAI_API_KEY,
  });

  console.log("üîµ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤...");
  const weatherAgent = createWeatherAgent(llm);
  const geographyAgent = createGeographyAgent(llm);
  
  console.log("üîµ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∞ —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º...");
  const graph = await buildGraph(llm, weatherAgent, geographyAgent);

  await startConversation(async (query) => {
    console.log(`\n\nüí¨ –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${query}"`);
    console.log("--------------------------------------------------");
    
    const finalState = await graph.invoke(
      { messages: [new HumanMessage({ content: query })] },
      { recursionLimit: 100 }
    );
    
    console.log("\n‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:", finalState.messages.slice(-1)[0].content);
  });
}

main().catch(console.error); 